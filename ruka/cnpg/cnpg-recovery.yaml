apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: cnpg-cluster
  namespace: cloudnativepg
spec:
  imageName: docker.io/cbarria/cnpgsphere:14.5
  imagePullPolicy: Always

  instances: 3

  postgresql:
    parameters:
      max_connections: "500"
      shared_buffers: 256MB
      idle_session_timeout: 4h
    pg_hba:
      - host all all 139.229.134.0/23 md5
      - host all all 139.229.136.0/21 md5
      - host all all 139.229.144.0/20 md5
      - host all all 139.229.160.0/19 md5
      - host all all 139.229.192.0/18 md5
      - host all all 140.252.146.0/23 md5

  bootstrap:
    recovery:
      source: cnpg-cluster

  externalClusters:
    - name: cnpg-cluster
      barmanObjectStore:
        destinationPath: s3://cnpg-backups-dev
        s3Credentials:
          accessKeyId:
            name: cnpg-aws-creds
            key: ACCESS_KEY_ID
          secretAccessKey:
            name: cnpg-aws-creds
            key: ACCESS_SECRET_KEY
        wal:
          compression: gzip

  backup:
    barmanObjectStore:
      # this needs to point into a different folder than the recovery folder to avoid overwrite (AWS_ACCESS_BUCKET)
      # https://www.enterprisedb.com/docs/postgres_for_kubernetes/latest/backup_recovery/ search for "Expected empty archive" Error
      destinationPath: "s3://cnpg-backups-dev/newbackup"
      s3Credentials:
        accessKeyId:
          name: cnpg-aws-creds
          key: ACCESS_KEY_ID
        secretAccessKey:
          name: cnpg-aws-creds
          key: ACCESS_SECRET_KEY
      wal:
        compression: gzip

    retentionPolicy: "60d"

  superuserSecret:
    name: cnpg-cluster-superuser

# Resources and Storage
  storage:
    size: 5Gi

  monitoring:
    enablePodMonitor: true
